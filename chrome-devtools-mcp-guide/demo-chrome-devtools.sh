#!/bin/bash

# Chrome DevTools MCP デモスクリプト

echo "======================================"
echo "Chrome DevTools MCP デモ"
echo "======================================"
echo ""

echo "1. Chrome DevTools MCPを起動します..."
echo "   コマンド: npx chrome-devtools-mcp@latest --isolated=true"
echo ""
echo "   このコマンドは、MCPサーバーとして動作し、"
echo "   標準入出力(stdio)でMCPプロトコルメッセージを送受信します。"
echo ""

echo "2. 使用方法:"
echo ""
echo "   【方法A】MCP対応クライアント（Claude Desktop等）から使用"
echo "   - .vscode/mcp.json に設定済み"
echo "   - Claude Desktopなどから「Chrome DevTools MCPを使って...」と指示"
echo ""
echo "   【方法B】直接起動してテスト（開発者向け）"
echo "   - スタンドアロンで起動してMCPメッセージを送受信"
echo "   - 標準入力にJSON-RPCメッセージを送信"
echo ""

echo "3. 実際の使用例:"
echo ""
echo "   例1: サンプルサイトのパフォーマンス測定"
echo "   「Chrome DevTools MCPを使って、"
echo "    http://127.0.0.1:5500/sample-site/index.html の"
echo "    パフォーマンスを測定してください」"
echo ""
echo "   例2: ネットワーク監視"
echo "   「フォームに20件データを追加する際の"
echo "    ネットワークトラフィックを監視してください」"
echo ""
echo "   例3: スクリーンショット取得"
echo "   「データが0件、20件、50件の状態で"
echo "    それぞれスクリーンショットを取得してください」"
echo ""

echo "======================================"
echo "起動オプション:"
echo "======================================"
echo ""
echo "  --isolated=true       : 一時的なプロファイルを使用"
echo "  --headless           : ヘッドレスモード"
echo "  --viewport 1920x1080 : ビューポートサイズ指定"
echo "  --logFile /tmp/log   : ログファイル出力"
echo ""

echo "======================================"
echo "設定ファイル (.vscode/mcp.json):"
echo "======================================"
cat .vscode/mcp.json
echo ""

echo "======================================"
echo "実際に起動する場合は以下を実行:"
echo "======================================"
echo ""
echo "  npx chrome-devtools-mcp@latest --isolated=true"
echo ""
echo "または、MCP対応のAIアシスタント（Claude等）から"
echo "直接指示してください。"
echo ""
